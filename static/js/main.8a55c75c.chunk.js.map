{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["getFormattedDate","today","toUTCString","slice","Clock","state","Date","timerId","this","window","setInterval","setState","console","info","prevProps","prevName","name","props","debug","clearInterval","className","React","PureComponent","getRandomName","value","now","toString","App","hasClock","clockName","handleHideClock","event","preventDefault","handleShowClock","document","addEventListener","removeEventListener","Component","ReactDOM","render","getElementById"],"mappings":"sNAUA,SAASA,EAAiBC,GACxB,OAAOA,EAAMC,cAAcC,OAAO,IAAK,GAGlC,IAAMC,EAAb,4MACEC,MAAe,CACbJ,MAAO,IAAIK,MAFf,EAKEC,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEV,MAAO,IAAIK,OAE3BM,QAAQC,KAAKb,EAAiB,EAAKK,MAAMJ,UACxC,OAZP,gCAeE,SAAmBa,GACjB,IAAcC,EAAaD,EAAnBE,KACAA,EAASR,KAAKS,MAAdD,KAEJD,IAAaC,GAEfJ,QAAQM,MAAR,uBAA8BH,EAA9B,eAA6CC,MArBnD,kCAyBE,WACEP,OAAOU,cAAcX,KAAKD,WA1B9B,oBA6BE,WACE,IAAQN,EAAUO,KAAKH,MAAfJ,MACAe,EAASR,KAAKS,MAAdD,KAER,OACE,sBAAKI,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGJ,IAGF,YAED,sBAAMI,UAAU,cAAhB,SACGpB,EAAiBC,YA1C5B,GAA2BoB,IAAMC,eCJjC,SAASC,IACP,IAAMC,EAAQlB,KAAKmB,MAAMC,WAAWvB,OAAO,GAE3C,MAAM,SAAN,OAAgBqB,GAGX,IAAMG,EAAb,4MACEtB,MAAe,CACbuB,UAAU,EACVC,UAAW,WAHf,EAMEtB,QAAU,EANZ,EAsBEuB,gBAAkB,SAACC,GACjBA,EAAMC,iBACN,EAAKrB,SAAS,CAAEiB,UAAU,KAxB9B,EA2BEK,gBAAkB,WAChB,EAAKtB,SAAS,CAAEiB,UAAU,KA5B9B,uDAQE,WAAqB,IAAD,OAClBM,SAASC,iBAAiB,cAAe3B,KAAKsB,iBAC9CI,SAASC,iBAAiB,QAAS3B,KAAKyB,iBACxCzB,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEkB,UAAWN,QAC1B,QAbP,kCAgBE,WACEW,SAASE,oBAAoB,cAAe5B,KAAKsB,iBACjDI,SAASE,oBAAoB,QAAS5B,KAAKyB,iBAC3CxB,OAAOU,cAAcX,KAAKD,WAnB9B,oBA+BE,WACE,MAAgCC,KAAKH,MAA7BuB,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAElB,OACE,sBAAKT,UAAU,MAAf,UACE,6CAECQ,GACC,cAAC,EAAD,CAAOZ,KAAMa,WAvCvB,GAAyBR,IAAMgB,WCb/BC,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.8a55c75c.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  name: string;\n};\n\ntype State = {\n  today: Date;\n};\n\nfunction getFormattedDate(today: Date) {\n  return today.toUTCString().slice(-12, -4);\n}\n\nexport class Clock extends React.PureComponent<Props, State> {\n  state: State = {\n    today: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ today: new Date() });\n      // eslint-disable-next-line no-console\n      console.info(getFormattedDate(this.state.today));\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Readonly<Props>) {\n    const { name: prevName } = prevProps;\n    const { name } = this.props;\n\n    if (prevName !== name) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevName} to ${name}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    const { today } = this.state;\n    const { name } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {getFormattedDate(today)}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\n\nimport { Clock } from './Clock';\n\ntype State = {\n  hasClock: boolean;\n  clockName: string;\n};\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', this.handleHideClock);\n    document.addEventListener('click', this.handleShowClock);\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('contextmenu', this.handleHideClock);\n    document.removeEventListener('click', this.handleShowClock);\n    window.clearInterval(this.timerId);\n  }\n\n  handleHideClock = (event: MouseEvent) => {\n    event.preventDefault();\n    this.setState({ hasClock: false });\n  };\n\n  handleShowClock = () => {\n    this.setState({ hasClock: true });\n  };\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && (\n          <Clock name={clockName} />\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}